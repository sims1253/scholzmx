{
  "hash": "786c79493ef14883fef337fcf04e70fc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Custom Color Grouping in ggplot2\"\nauthor: \"Maximilian Scholz\"\ndate: \"2023-06-01\"\ncategories: [R, ggplot2, visualization]\ntags: [\"ggplot2\", \"R\", \"colors\", \"visualization\"]\ndescription: \"How to use custom color grouping in ggplot2 with meta-groups and custom color mapping.\"\n---\n\nI have a model fitted on data from 5 groups and want to plot the conditional effects for them. However, I don't want one color per group but instead want to color them according to meta-groups. If I use the meta-group as an argument for the color and fill, I get the zigzag lines. group_by(group) also doesn't help here.\nInstead we have to fiddle with the legend and the color map.\nArrange the colors in the order we want them to be and, and this is the final trick needed, name the colors with their corresponding group. You also need a labeler to overwrite the actual groups in the legend later, but only for the things that will be in the breaks vector.\nmy_colors_2 <- c('#4477AA', '#4477AA', '#4477AA', '#EE6677', '#EE6677')\n\nnames(my_colors_2) <- c(\"y ~ x + z1 + z2\",\n                        \"y ~ x + z1\",\n                        \"y ~ x + z1 + z2 + z3\",\n                        \"y ~ x + z2\",\n                        \"y ~ x + z1 + z2 + z4\")\n\nformula.labs <- c(\"Unbiased\",\n                  \"Biased\")\nnames(formula.labs) <- c(\"y ~ x + z1 + z2\",\n                         \"y ~ x + z1 + z2 + z4\")\nYou then plot your plot with the usual color and fill = formula as you would.\nThen, you mess with the scales/labels by adding the breaks argument. This only works with the named color map, as ggplot otherwise doesn't seem to know how to color the formulas that are not part of the breaks vector\nscale_color_manual(values = my_colors_2, labels = formula.labs, breaks = c(\"y ~ x + z1 + z2\", \"y ~ x + z1 + z2 + z4\")) +\n  scale_fill_manual(values = my_colors_2, labels = formula.labs, breaks = c(\"y ~ x + z1 + z2\", \"y ~ x + z1 + z2 + z4\"))\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n If you want to collect guides below plots with patchwork, you can use & instead of + to add a theme element as such:\n(tpr + theme(axis.title.x = element_blank())) / fpr + theme(strip.text.x = element_blank()) +   plot_layout(guides = 'collect') & theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(colorspace)\norange <- hex2RGB(\"#D2691E\", gamma = FALSE)\norange_hcl <- as(orange, \"polarLUV\")\n\norange_h <- orange_hcl@coords[1, \"H\"]\norange_c <- orange_hcl@coords[1, \"C\"]\norange_l <- orange_hcl@coords[1, \"L\"]\n```\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseq_60 <- seq(from = -300, to = 300, by = 60)\norange_60 <- seq_60 + orange_h\n\norange_h_lower <- orange_60[which((orange_60 >= 0 & orange_60 < 60))]\norange_h_upper <- orange_60[which((orange_60 >= 300 & orange_60 < 360))]\n\nhcl_six <- qualitative_hcl(\n  6, \n  h = c(orange_h_lower, orange_h_upper), \n  c = orange_c, \n  l = orange_l\n)\n```\n:::\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}