---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import HandDrawnDivider from '../../components/HandDrawnDivider.astro';

export async function getStaticPaths() {
  const notes = await getCollection('notes');
  return notes.map((note) => ({
    params: { slug: note.slug },
    props: { note },
  }));
}

const { note } = Astro.props;
const { Content } = await note.render();

// Get all notes for backlinks functionality
const allNotes = await getCollection('notes');

// Find notes that reference this note (backlinks)
const backlinks = allNotes.filter(
  (n) =>
    n.data.connections?.includes(note.slug) ||
    n.body.includes(`[[${note.data.title}]]`) ||
    n.body.includes(`[[${note.slug}]]`)
);

// Find notes that this note connects to (forward links)
const forwardLinks = allNotes.filter((n) => note.data.connections?.includes(n.slug));

const formatDate = (date: Date) => {
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
};

const getTypeColor = (type: string) => {
  const colors = {
    thought: 'var(--color-sage)',
    observation: 'var(--color-moss)',
    draft: 'var(--color-ochre)',
    idea: 'var(--color-gold)',
    reference: 'var(--color-walnut)',
  };
  return colors[type as keyof typeof colors] || 'var(--color-ink-medium)';
};
---

<BaseLayout
  title={`${note.data.title} - Notes`}
  description={note.data.description || `A ${note.data.type} from the digital garden`}
  footerVariant="garden"
  longform={true}
  personal={false}
>
  <div class="note-page">
    <div class="note-container">
      <article class="note-content">
        <header class="note-header">
          <div class="note-meta">
            <div
              class="note-type-badge"
              style={`border-color: ${getTypeColor(note.data.type)}; color: ${getTypeColor(note.data.type)}`}
            >
              <span class="manuscript-type-marker" data-type={note.data.type}></span>
              {note.data.type}
            </div>
            <time class="note-date" datetime={note.data.created.toISOString()}>
              Planted {formatDate(note.data.created)}
            </time>
            {
              note.data.updated && (
                <time class="note-updated" datetime={note.data.updated.toISOString()}>
                  Tended {formatDate(note.data.updated)}
                </time>
              )
            }
          </div>

          <h1 class="note-title">
            {note.data.title}
          </h1>

          {note.data.description && <p class="note-description">{note.data.description}</p>}

          {
            note.data.tags && note.data.tags.length > 0 && (
              <div class="note-tags">
                {note.data.tags.map((tag) => (
                  <span class="tag">#{tag}</span>
                ))}
              </div>
            )
          }
        </header>

        <HandDrawnDivider variant="botanical" width="wide" />

        <div class="note-body longform">
          <!-- Ensure first paragraph of Content begins with a DropCap for consistent manuscript style.
               If the markdown content starts with a heading or image, consider moving DropCap usage into
               the content itself or adding a lead paragraph here. -->
          <Content />
        </div>

        <!-- Connections Section -->
        {
          (forwardLinks.length > 0 || backlinks.length > 0) && (
            <div>
              <HandDrawnDivider variant="simple" width="medium" />

              <section class="connections-section">
                <h2 class="connections-title">Connected Growth</h2>

                {forwardLinks.length > 0 && (
                  <div class="connection-group">
                    <h3 class="connection-group-title">Seeds from this note:</h3>
                    <div class="connection-list">
                      {forwardLinks.map((linkedNote) => (
                        <a href={`/notes/${linkedNote.slug}`} class="connection-link">
                          <span class="connection-icon">
                            <span class="manuscript-type-marker" data-type={linkedNote.data.type} />
                          </span>
                          <span class="connection-title">{linkedNote.data.title}</span>
                          <span class="connection-type">{linkedNote.data.type}</span>
                        </a>
                      ))}
                    </div>
                  </div>
                )}

                {backlinks.length > 0 && (
                  <div class="connection-group">
                    <h3 class="connection-group-title">Notes that reference this one:</h3>
                    <div class="connection-list">
                      {backlinks.map((backlinkNote) => (
                        <a href={`/notes/${backlinkNote.slug}`} class="connection-link">
                          <span class="connection-icon">
                            <span
                              class="manuscript-type-marker"
                              data-type={backlinkNote.data.type}
                            />
                          </span>
                          <span class="connection-title">{backlinkNote.data.title}</span>
                          <span class="connection-type">{backlinkNote.data.type}</span>
                        </a>
                      ))}
                    </div>
                  </div>
                )}
              </section>
            </div>
          )
        }

        <HandDrawnDivider variant="simple" width="medium" />

        <footer class="note-footer">
          <nav class="note-navigation">
            <a href="/notes" class="back-link">‚Üê Back to Garden</a>
          </nav>
        </footer>
      </article>
    </div>
  </div>
</BaseLayout>

<style>
  .note-page {
    min-height: 100vh;
    padding: var(--space-lg) 0;
  }

  .note-container {
    max-width: 90ch;
    margin: 0 auto;
    padding: 0 var(--space-lg);
  }

  .note-content {
    background: rgba(250, 247, 240, 0.3);
    border-radius: var(--border-radius-lg);
    padding: var(--space-xl);
    border: 1px solid rgba(139, 90, 60, 0.1);
    box-shadow:
      0 4px 12px rgba(0, 0, 0, 0.08),
      0 2px 6px rgba(139, 90, 60, 0.12),
      0 1px 3px rgba(0, 0, 0, 0.06);
  }

  .note-header {
    margin-bottom: var(--space-xl);
  }

  .note-meta {
    display: flex;
    align-items: center;
    gap: var(--space-md);
    margin-bottom: var(--space-lg);
    flex-wrap: wrap;
  }

  .note-type-badge {
    font-size: var(--text-sm);
    font-weight: 500;
    text-transform: capitalize;
    padding: var(--space-xs) var(--space-sm);
    border: 1px solid;
    border-radius: calc(var(--border-radius) * 2);
    background: rgba(255, 255, 255, 0.5);
  }

  .note-date,
  .note-updated {
    font-size: var(--text-xs);
    color: var(--color-ink-light);
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .note-updated {
    font-style: italic;
  }

  .note-title {
    font-family: var(--font-body-serious); /* ET Book Roman */
    font-size: clamp(var(--text-xl), 4vw, var(--text-2xl));
    line-height: 1.2;
    margin-bottom: var(--space-md);
    color: var(--color-ink-dark);
  }

  .note-description {
    font-family: var(--font-body-serious); /* ET Book Roman */
    font-size: var(--text-lg);
    font-style: italic;
    color: var(--color-ink-medium);
    line-height: 1.6;
    margin-bottom: var(--space-md);
  }

  .note-tags {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-xs);
  }

  .tag {
    font-size: var(--text-xs);
    color: var(--color-moss);
    background-color: rgba(90, 107, 71, 0.1);
    padding: 0.2em 0.5em;
    border-radius: calc(var(--border-radius) / 2);
    font-weight: 500;
  }

  .note-body {
    font-size: var(--text-md);
    line-height: 1.6;
    color: var(--color-ink-dark);
    font-feature-settings:
      'liga' 1,
      'kern' 1,
      'calt' 1;
    text-rendering: optimizelegibility;
  }

  .note-body :global(h2) {
    font-size: var(--text-xl);
    margin-top: 1.8em;
    margin-bottom: 0.8em;
    color: var(--color-walnut);
    font-weight: 600;
    line-height: 1.3;
  }

  .note-body :global(h3) {
    font-size: var(--text-lg);
    margin-top: 1.6em;
    margin-bottom: 0.6em;
    color: var(--color-ink-dark);
    font-weight: 600;
    line-height: 1.4;
  }

  .note-body :global(p) {
    margin-bottom: 1.4em;
  }

  .note-body :global(blockquote) {
    border-left: 3px solid var(--color-sage);
    padding-left: var(--space-md);
    margin: var(--space-lg) 0;
    font-style: italic;
    color: var(--color-ink-medium);
    background: rgba(168, 181, 160, 0.05);
    padding: var(--space-md);
    border-radius: 0 var(--border-radius) var(--border-radius) 0;
  }

  .note-body :global(em) {
    font-style: italic;
    color: var(--color-ink-medium);
  }

  .note-body :global(strong) {
    font-weight: 600;
    color: var(--color-walnut);
  }

  .note-body :global(code) {
    background-color: rgba(139, 90, 60, 0.1);
    color: var(--color-walnut);
    padding: 0.2em 0.4em;
    border-radius: calc(var(--border-radius) / 2);
    font-size: 0.9em;
  }

  .note-body :global(pre) {
    background-color: rgba(139, 90, 60, 0.05);
    border: 1px solid rgba(139, 90, 60, 0.1);
    border-radius: var(--border-radius);
    padding: var(--space-md);
    margin: var(--space-lg) 0;
    overflow-x: auto;
  }

  .note-body :global(pre code) {
    background: none;
    padding: 0;
  }

  /* Wiki-style links */
  .note-body :global(a) {
    color: var(--color-sage);
    text-decoration: none;
    border-bottom: 1px dotted var(--color-sage);
    transition: all var(--transition-fast);
  }

  .note-body :global(a:hover) {
    color: var(--color-walnut);
    border-bottom-color: var(--color-walnut);
    border-bottom-style: solid;
  }

  .connections-section {
    margin-top: var(--space-xl);
    padding: var(--space-lg);
    background: rgba(168, 181, 160, 0.05);
    border-radius: var(--border-radius);
    border: 1px solid rgba(168, 181, 160, 0.2);
  }

  .connections-title {
    font-size: var(--text-lg);
    color: var(--color-walnut);
    margin-bottom: var(--space-md);
    text-align: center;
  }

  .connection-group {
    margin-bottom: var(--space-md);
  }

  .connection-group:last-child {
    margin-bottom: 0;
  }

  .connection-group-title {
    font-size: var(--text-sm);
    color: var(--color-ink-medium);
    margin-bottom: var(--space-sm);
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .connection-list {
    display: flex;
    flex-direction: column;
    gap: var(--space-xs);
  }

  .connection-link {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    padding: var(--space-sm);
    background: var(--color-parchment-light);
    border-radius: calc(var(--border-radius) / 2);
    text-decoration: none;
    transition: all var(--transition-fast);
    border: 1px solid rgba(139, 90, 60, 0.1);
  }

  .connection-link:hover {
    background: rgba(139, 90, 60, 0.05);
    border-color: rgba(139, 90, 60, 0.2);
    transform: translateX(4px);
  }

  .connection-icon {
    font-size: var(--text-sm);
    width: 1.5em;
    text-align: center;
  }

  .connection-title {
    flex: 1;
    font-size: var(--text-sm);
    color: var(--color-ink-dark);
    font-weight: 500;
  }

  .connection-type {
    font-size: var(--text-xs);
    color: var(--color-ink-light);
    text-transform: capitalize;
    font-style: italic;
  }

  /* Manuscript type markers */
  .manuscript-type-marker {
    display: inline-block;
    width: 12px;
    height: 12px;
    margin-right: 6px;
    border-radius: 2px;
    position: relative;
    vertical-align: middle;
  }

  .manuscript-type-marker[data-type='thought'] {
    background: radial-gradient(circle at 30% 30%, var(--color-sage), rgba(168, 181, 160, 0.8));
    border: 1px solid var(--color-sage);
  }

  .manuscript-type-marker[data-type='thought']::after {
    content: '';
    position: absolute;
    top: 2px;
    left: 2px;
    width: 6px;
    height: 6px;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.4);
  }

  .manuscript-type-marker[data-type='observation'] {
    background: linear-gradient(45deg, var(--color-moss), rgba(90, 107, 71, 0.8));
    border: 1px solid var(--color-moss);
  }

  .manuscript-type-marker[data-type='observation']::after {
    content: '';
    position: absolute;
    inset: 3px;
    border: 1px solid rgba(255, 255, 255, 0.6);
    border-radius: 1px;
  }

  .manuscript-type-marker[data-type='draft'] {
    background: linear-gradient(135deg, var(--color-ochre), rgba(190, 157, 98, 0.8));
    border: 1px solid var(--color-ochre);
    border-radius: 1px;
  }

  .manuscript-type-marker[data-type='draft']::after {
    content: '';
    position: absolute;
    top: 2px;
    left: 2px;
    right: 2px;
    height: 1px;
    background: rgba(255, 255, 255, 0.5);
  }

  .manuscript-type-marker[data-type='draft']::before {
    content: '';
    position: absolute;
    bottom: 2px;
    left: 2px;
    right: 2px;
    height: 1px;
    background: rgba(255, 255, 255, 0.3);
  }

  .manuscript-type-marker[data-type='idea'] {
    background: radial-gradient(ellipse at center, var(--color-gold), rgba(212, 175, 55, 0.8));
    border: 1px solid var(--color-gold);
    border-radius: 50%;
  }

  .manuscript-type-marker[data-type='idea']::after {
    content: '';
    position: absolute;
    inset: 1px;
    border-radius: 50%;
    background: radial-gradient(circle at 40% 30%, rgba(255, 255, 255, 0.6), transparent 50%);
  }

  .manuscript-type-marker[data-type='reference'] {
    background: linear-gradient(to bottom, var(--color-walnut), rgba(139, 90, 60, 0.8));
    border: 1px solid var(--color-walnut);
    border-radius: 1px;
  }

  .manuscript-type-marker[data-type='reference']::after {
    content: '';
    position: absolute;
    inset: 1px;
    background:
      linear-gradient(
        90deg,
        transparent 2px,
        rgba(255, 255, 255, 0.2) 2px,
        rgba(255, 255, 255, 0.2) 3px,
        transparent 3px
      ),
      linear-gradient(
        90deg,
        transparent 6px,
        rgba(255, 255, 255, 0.2) 6px,
        rgba(255, 255, 255, 0.2) 7px,
        transparent 7px
      );
  }

  .note-footer {
    margin-top: var(--space-xl);
    text-align: center;
  }

  .back-link {
    display: inline-flex;
    align-items: center;
    gap: var(--space-xs);
    font-size: var(--text-sm);
    color: var(--color-walnut);
    text-decoration: none;
    font-weight: 500;
    padding: var(--space-sm) var(--space-md);
    border: 1px solid var(--color-walnut);
    border-radius: var(--border-radius);
    transition: all var(--transition-fast);
  }

  .back-link:hover {
    background-color: var(--color-walnut);
    color: var(--color-parchment-light);
  }

  /* Mobile responsiveness */
  @media (max-width: 768px) {
    .note-container {
      padding: 0 var(--space-md);
    }

    .note-content {
      padding: var(--space-lg);
    }

    .note-meta {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-sm);
    }

    .connection-link {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-xs);
    }

    .connection-type {
      align-self: flex-end;
    }
  }

  @media (max-width: 480px) {
    .note-content {
      padding: var(--space-md);
    }

    .connections-section {
      padding: var(--space-md);
    }
  }
</style>
