---
// Import shared quotes data to avoid duplication between server and client
import { personalQuotes } from '../data/quotes.js';

// Get random quote for initial display
const getRandomQuote = () => personalQuotes[Math.floor(Math.random() * personalQuotes.length)];
const initialQuote = getRandomQuote();
---

<div class="quote-container" id="quote-container" aria-live="polite" aria-label="Quote of the day">
  <button
    class="quote-interactive-wrapper"
    type="button"
    aria-label="Click to get a new quote"
    id="quote-wrapper-button"
  >
    <blockquote class="daily-quote">
      <p class="quote-text" id="quote-text">{initialQuote.text}</p>
      <footer class="quote-attribution">
        <cite class="quote-author" id="quote-author">— {initialQuote.author}</cite>
      </footer>
    </blockquote>
  </button>
</div>

<script>
  // Import shared quotes data to ensure consistency with server-side rendering
  import { personalQuotes } from '../data/quotes.js';

  function getRandomQuote() {
    return personalQuotes[Math.floor(Math.random() * personalQuotes.length)];
  }

  function updateQuote() {
    const newQuote = getRandomQuote();
    const quoteText = document.getElementById('quote-text');
    const quoteAuthor = document.getElementById('quote-author');
    const container = document.getElementById('quote-container');

    if (quoteText && quoteAuthor && container) {
      // Add fade out class
      container.style.opacity = '0.5';
      container.style.transform = 'translateY(5px)';

      setTimeout(() => {
        quoteText.textContent = newQuote.text;
        quoteAuthor.textContent = `— ${newQuote.author}`;

        // Fade back in
        container.style.opacity = '1';
        container.style.transform = 'translateY(0)';

        // Create accessible announcement for screen readers
        const announcement = `New quote: ${newQuote.text} by ${newQuote.author}`;

        // Update the aria-label for immediate announcement
        container.setAttribute('aria-label', `Quote of the day: ${announcement}`);

        // Reset aria-label after announcement
        setTimeout(() => {
          container.setAttribute('aria-label', 'Quote of the day');
        }, 3000);
      }, 200);
    }
  }

  // Add click handler when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    const quoteWrapperButton = document.getElementById('quote-wrapper-button');

    // Add click handler to the quote wrapper button
    if (quoteWrapperButton) {
      quoteWrapperButton.addEventListener('click', () => {
        updateQuote();

        // Make blossoms stay visible after first click
        const vineFrame = quoteWrapperButton.closest('.smooth-vine-frame');
        if (vineFrame) {
          vineFrame.classList.add('blossoms-activated');
        }
      });
    }
  });
</script>

<style>
  .quote-container {
    position: relative;
    margin: 0;
    padding: 0;
    background: transparent;
    border: none;
    box-shadow: none;
  }

  .quote-interactive-wrapper {
    display: block;
    width: 100%;
    background: none;
    border: none;
    padding: 0;
    margin: 0;
    cursor: pointer;
    text-align: inherit;
    font: inherit;
    color: inherit;
    text-decoration: none;
    border-radius: var(--border-radius);
  }

  /* Apply consistent focus styling using the same approach as global button styles */
  .quote-interactive-wrapper:focus-visible {
    outline: 2px solid color-mix(in srgb, var(--color-walnut) 90%, var(--color-ochre));
    outline-offset: 2px;
    box-shadow: 0 0 0 2px color-mix(in srgb, var(--color-walnut) 20%, transparent);
  }

  .daily-quote {
    margin: 0;
    padding: 0;
    border: none;
    background: none;
    position: relative;
  }

  /* Override global blockquote quotation mark */
  .daily-quote::before {
    display: none;
  }

  .quote-text {
    font-size: var(--text-sm);
    font-style: italic;
    line-height: var(--spacing-line-height);
    color: var(--color-ink-dark);
    margin: 0;
    padding: 0;
    font-family: var(--font-body-personal); /* Ensure consistent Alegreya usage */
  }

  .quote-attribution {
    text-align: right;
    margin: 0;
  }

  .quote-author {
    font-size: var(--text-xs);
    font-style: normal;
    font-weight: 500;
    color: var(--color-ink-medium);
    font-family: var(--font-body-personal); /* Alegreya for footer vibes */
  }

  /* Hover effect for subtle interactivity - works with botanical frame */
  .quote-interactive-wrapper:hover {
    /* No visual effect here - let the parent SmoothVineFrame handle the hover */
    transition: all var(--transition-medium);
  }

  /* Mobile adjustments */
  @media (max-width: 768px) {
    .quote-container {
      margin: var(--space-lg) 0;
      padding: var(--space-md);
    }

    .quote-text {
      font-size: var(--text-md);
      padding-left: var(--space-sm);
    }
  }
</style>
