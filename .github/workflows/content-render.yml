name: Content Render (Quarto → Markdown)

on:
  push:
    branches: [main, master]
    paths:
      - 'src/content/**/*.qmd'
      - 'build-blog.sh'
      - '_quarto.yml'
      - '.github/workflows/content-render.yml'
  workflow_dispatch:
  schedule:
    - cron: '17 3 * * *'

permissions:
  contents: read

concurrency:
  group: 'render-${{ github.ref }}'
  cancel-in-progress: true

jobs:
  check-cache:
    name: Check if rendering is needed
    runs-on: ubuntu-latest
    outputs:
      needs-render: ${{ steps.cache-check.outputs.needs-render }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Download previous artifacts to check cache validity
      - name: Get latest content render run (excluding current)
        id: latest-render
        run: |
          latest_run=$(gh run list \
            --workflow="Content Render (Quarto → Markdown)" \
            --status=success \
            --limit=5 \
            --json=databaseId \
            --jq="map(select(.databaseId != ${{ github.run_id }})) | .[0].databaseId // empty" || echo "")
          echo "run-id=$latest_run" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Download previous rendered content
        uses: actions/download-artifact@v4
        with:
          name: rendered-content
          path: .
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          run-id: ${{ steps.latest-render.outputs.run-id }}
        continue-on-error: true

      # Quick cache check using downloaded artifacts
      - name: Check if rendering is needed
        id: cache-check
        run: |
          needs_render=false

          # First check if we have any QMD files to process
          qmd_files=$(find src/content/blog -name "index.qmd" -path "*/[0-9][0-9][0-9][0-9]/*/*" -type f | wc -l)
          if [ "$qmd_files" -eq 0 ]; then
            echo "No QMD files found to process"
            echo "needs-render=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Check each QMD file against downloaded artifacts and cache
          while IFS= read -r -d '' qmd_file; do
            md_file="${qmd_file%.qmd}.md"
            hash_file=".blog-cache/$(echo "$qmd_file" | sed 's|/|_|g').hash"

            echo "Checking $qmd_file..."

            # If markdown doesn't exist, needs rendering
            if [ ! -f "$md_file" ]; then
              echo "  → No MD file found"
              needs_render=true
              break
            fi

            # If hash file doesn't exist, needs rendering
            if [ ! -f "$hash_file" ]; then
              echo "  → No hash cache found"
              needs_render=true
              break
            fi

            # Calculate current hash and compare with cached hash
            current_hash=$(sha256sum "$qmd_file" | cut -d' ' -f1)
            cached_hash=$(cat "$hash_file" 2>/dev/null || echo "")

            if [ "$current_hash" != "$cached_hash" ]; then
              echo "  → Content changed (${current_hash:0:8} != ${cached_hash:0:8})"
              needs_render=true
              break
            else
              echo "  → Content unchanged (${current_hash:0:8})"
            fi
          done < <(find src/content/blog -name "index.qmd" -path "*/[0-9][0-9][0-9][0-9]/*/*" -type f -print0)

          echo "needs-render=$needs_render" >> $GITHUB_OUTPUT
          if [ "$needs_render" = "true" ]; then
            echo "Rendering needed - content has changed"
          else
            echo "No rendering needed - all content unchanged"
          fi

  render:
    name: Render Quarto content
    runs-on: ubuntu-latest
    needs: check-cache
    if: needs.check-cache.outputs.needs-render == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Setup R
        id: setup-r
        uses: r-lib/actions/setup-r@v2

      - name: Setup R dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache: always
          packages: 'any::sessioninfo'
          extra-packages: |
            any::knitr
            any::rmarkdown
            any::tidyverse
            any::brms
            any::furrr
            any::patchwork
            any::extraDistr
            any::loo
            any::ggdag
            any::GGally
            any::dagitty
            github::sims1253/bayesim

      - name: Cache render hashes
        uses: actions/cache@v4
        with:
          path: .blog-cache
          key: render-cache-${{ runner.os }}-r${{ steps.setup-r.outputs.installed-r-version }}-${{ hashFiles('src/content/**/*.qmd', 'build-blog.sh', '_quarto.yml') }}
          restore-keys: |
            render-cache-${{ runner.os }}-r${{ steps.setup-r.outputs.installed-r-version }}-
            render-cache-${{ runner.os }}-

      # Download previous rendered content to enable caching
      - name: Get latest content render run (excluding current)
        id: latest-render
        run: |
          latest_run=$(gh run list \
            --workflow="Content Render (Quarto → Markdown)" \
            --status=success \
            --limit=5 \
            --json=databaseId \
            --jq="map(select(.databaseId != ${{ github.run_id }})) | .[0].databaseId // empty" || echo "")
          echo "run-id=$latest_run" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Download previous rendered content
        uses: actions/download-artifact@v4
        with:
          name: rendered-content
          path: .
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          run-id: ${{ steps.latest-render.outputs.run-id }}
        continue-on-error: true

      # Debug - Show what files were downloaded for caching
      - name: Debug - Show downloaded files for caching
        run: |
          echo "=== Root directory contents ==="
          ls -la
          echo "=== src/content/blog structure ==="
          find src/content/blog -type f -name "*.md" | head -20 || echo "No MD files found"
          echo "=== Cache directory ==="
          ls -la .blog-cache/ || echo "No cache directory"
          echo "=== Assets directory ==="
          ls -la src/assets/images/blog/ || echo "No assets directory"

      - name: Render Quarto posts
        run: bash build-blog.sh

      - name: Debug - List generated files
        run: |
          echo "=== Generated markdown files ==="
          find src/content/blog -name "*.md" -type f | head -20
          echo "=== Generated index.md files ==="
          find src/content/blog -name "index.md" -type f | head -20
          echo "=== Directory structure ==="
          ls -la src/content/blog/2022/*/
          echo "=== Asset directories ==="
          ls -la src/assets/images/blog/ || echo "No assets directory"

      - name: Upload rendered content artifact
        uses: actions/upload-artifact@v4
        with:
          name: rendered-content
          if-no-files-found: error
          compression-level: 6
          path: |
            src/
            .blog-cache/
