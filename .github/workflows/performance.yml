name: Performance Regression Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm install -g @lhci/cli
          npm install
          
      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
          
      - name: Install R dependencies (binary)
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          packages: |
            any::knitr
            any::rmarkdown
            any::ggplot2
            any::rstan
            any::bayesplot
            any::devtools
            any::usethis
            any::testthat
            any::brms
            any::lubridate
          
      - name: Setup Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        
      - name: Build site
        run: quarto render
        
      - name: Serve site
        run: |
          npx http-server docs -p 3000 &
          sleep 5
          
      - name: Run Lighthouse CI
        id: lighthouse
        run: |
          if [ -z "$LHCI_GITHUB_APP_TOKEN" ]; then
            echo "⚠️ LHCI_GITHUB_APP_TOKEN not set. Performance results will be limited."
            echo "See docs/LIGHTHOUSE_SETUP.md for setup instructions."
          fi
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        continue-on-error: true
          
      - name: Check performance results
        run: |
          if [ "${{ steps.lighthouse.outcome }}" = "success" ]; then
            echo "✅ All performance thresholds met!"
            echo "Performance scores are within acceptable ranges."
          else
            echo "❌ Performance thresholds not met. Check the results above."
            echo "This PR may have performance regressions."
            echo ""
            echo "Common causes:"
            echo "- Large images or assets added"
            echo "- Blocking JavaScript or CSS"
            echo "- Third-party scripts"
            echo "- Layout shifts from dynamic content"
          fi
          
      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-results
          path: .lighthouseci/
          
      - name: Comment PR with results
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            try {
              // Find lighthouse results files using fs.readdirSync
              const lighthouseDir = '.lighthouseci';
              
              if (!fs.existsSync(lighthouseDir)) {
                console.log('No .lighthouseci directory found');
                return;
              }
              
              const files = fs.readdirSync(lighthouseDir);
              const resultFiles = files.filter(file => file.startsWith('lhr-') && file.endsWith('.json'));
              
              if (resultFiles.length === 0) {
                console.log('No lighthouse results found');
                return;
              }
              
              // Use the first result file (or you could aggregate multiple)
              const resultsPath = path.join(lighthouseDir, resultFiles[0]);
              const results = JSON.parse(fs.readFileSync(resultsPath, 'utf8'));
              
              const performanceScore = Math.round(results.categories.performance.score * 100);
              const accessibilityScore = Math.round(results.categories.accessibility.score * 100);
              const bestPracticesScore = Math.round(results.categories['best-practices'].score * 100);
              const seoScore = Math.round(results.categories.seo.score * 100);
              
              const fcp = Math.round(results.audits['first-contentful-paint'].numericValue);
              const lcp = Math.round(results.audits['largest-contentful-paint'].numericValue);
              const cls = results.audits['cumulative-layout-shift'].numericValue.toFixed(3);
              
              // Add status indicators
              const getStatus = (score, target) => score >= target ? '✅' : '❌';
              const getVitalStatus = (value, target) => value <= target ? '✅' : '❌';
              
              const comment = `## 🚦 Lighthouse Performance Results
              
              | Metric | Score | Target | Status |
              |--------|-------|--------|--------|
              | Performance | ${performanceScore} | ≥80 | ${getStatus(performanceScore, 80)} |
              | Accessibility | ${accessibilityScore} | ≥90 | ${getStatus(accessibilityScore, 90)} |
              | Best Practices | ${bestPracticesScore} | ≥80 | ${getStatus(bestPracticesScore, 80)} |
              | SEO | ${seoScore} | ≥80 | ${getStatus(seoScore, 80)} |
              
              ### Core Web Vitals
              - **FCP**: ${fcp}ms (target: ≤1800ms) ${getVitalStatus(fcp, 1800)}
              - **LCP**: ${lcp}ms (target: ≤2500ms) ${getVitalStatus(lcp, 2500)}
              - **CLS**: ${cls} (target: ≤0.1) ${getVitalStatus(parseFloat(cls), 0.1)}
              
              [View detailed results in the Actions tab](${context.payload.pull_request.html_url.replace('/pull/', '/actions')})
              `;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            } catch (error) {
              console.log('Could not post results comment:', error.message);
              
              // Post a fallback comment
              const fallbackComment = `## 🚦 Lighthouse Performance Results

              ⚠️ Performance test completed but results could not be parsed. Check the [Actions tab](${context.payload.pull_request.html_url.replace('/pull/', '/actions')}) for details.

              Error: ${error.message}`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: fallbackComment
              });
            }